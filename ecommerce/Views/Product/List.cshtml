@model IEnumerable<ecommerce.Models.ProductModel>

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>View</h1>



<div class="container">
    <div class="row">
        <div class="col">
            <h1>Product Details</h1>
        </div>
    </div>

    <div class="row">
        <div class="col text-end">
            <a asp-action="Details" asp-controller="Product" class="btn btn-dark mb-3">Add Product</a>
        </div>
    </div>

    <table id="productTable" class="table table-striped table-bordered table-responsive table-hover table-checkable">
        <thead>
            <tr>
                <th>SNo.</th>
                <th>Product Name</th>
                <th>Product Description</th>
                <th>Category Name</th>
                <th>Cost Price</th>
                <th>Sell Price</th>
                <th>Savings</th>
                <th>Stock Quantity</th>
                <th>Remaining Quantity</th>
                <th>Product Image</th>
                <th>Actions</th>
            </tr>
        </thead>
    </table>
</div>

<div id="imageModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Image Preview</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
        $(document).ready(function () {
            $('#productTable').DataTable({
                serverSide: true,
                processing: true,
                ajax: {
                    url: '@Url.Action("ProductList", "Product")',
                    type: "POST",
                    dataType: "json",
                    dataSrc: "data"
                
                   
                },
                columns: [
                    { data: "rowNum", name: "RowNum", orderable: true },
                    { data: "pName", name: "PName", orderable: true },
                    { data: "pDescription", name: "PDescription", orderable: true },
                    { data: "categoryName", name: "PCategoryName", orderable: true },

                    { data: "pCostPrice", name: "PCostPrice", orderable: true },
                    { data: "psellPrice", name: "PSellPrice", orderable: true },
                    { data: "pSavings", name: "PSavings", orderable: true },
                    { data: "stockQt", name: "StockQt", orderable: true },
                    { data: "remainQt", name: "RemainQt", orderable: true },
                    { data: "pImage", name: "PImage", orderable: false,
                        render: function (data, type, row) {
                            // Assuming `pImage` contains the URL of the image
                            var url='@Url.Content("~/Content/Image/")' + data;
                            return '<button class="btn btn-sm btn-primary btn-view-image" data-url="' + url + '"><i class="bi bi-eye-fill"></i> View</button>';
                        }
                    
                    },
                    {
                        data: null,
                        name: "Actions",
                        orderable: false,              
                        render: function (data, type, row) {
                            var editUrl = '@Url.Action("Details", "Product")/' + row.pId;
                            var deleteUrl = '@Url.Action("Delete", "Product")/' + row.pId;

                            var buttons = '<a href="' + editUrl + '" class="btn btn-sm btn-primary btn-edit me-4 d-inline">Edit</a>';
                            buttons += '<a href="' + deleteUrl + '" class="btn btn-sm btn-danger btn-delete btnDelete d-inline" data-id="' + row.pId + '">Delete</a>';

                            return buttons;
                        }
                    }
                ],
                
                initComplete: function (settings, json) {
                    console.log(json); // Log the data to the console
                }
            });
        });

 

        $(document).on('click', '.btn-view-image', function () {
            var imageData = $(this).data('url');
            $('#imageModal').find('.modal-body').html('<img src="' + imageData + '" class="img-fluid">');
            $('#imageModal').modal('show');
        });
    </script>
<script>
     

    $("body").on("click", ".btnDelete", function (e) {
        e.preventDefault();
    var btnDelete = $(this);
    var Id = btnDelete.data("id");

    console.log(Id);
    $.ajax({
    type: "POST",
    url: '@Url.Action("Delete", "Product")',
    data: { Id: Id },
    dataType: "json",
    success: function (result) {
    if (result.success) {
    btnDelete.closest('tr').fadeOut('slow', function () {
    $(this).remove();
    });
    toastr['success']("Deleted Successfully");
                        setTimeout(function () {
                            location.reload();
                        }, 3000);
    } else {
    toastr['error']("Error occurred");
    alert(result.message);
    }
    },
    error: function () {
    alert('Error during the AJAX request');
    }
    });
    });

</script>
}